From d69c541ef454aa33e492bb7cfcdcf3b84d01152e Mon Sep 17 00:00:00 2001
From: Joel Yliluoma <joel.yliluoma@iki.fi>
Date: Sun, 24 Jan 2016 19:42:08 +0200
Subject: [PATCH 12/16] INT10 CHARGEN: Honoring BIOS memory variables for
 vidmem offset calculations

---
 src/ints/int10_char.cpp | 56 ++++++++++++++++++++++++-------------------------
 1 file changed, 28 insertions(+), 28 deletions(-)

diff --git a/src/ints/int10_char.cpp b/src/ints/int10_char.cpp
index 672c0bf..a8d8bd6 100644
--- a/src/ints/int10_char.cpp
+++ b/src/ints/int10_char.cpp
@@ -28,10 +28,10 @@
 
 static void CGA2_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt base) {
 	Bit8u cheight = real_readb(BIOSMEM_SEG,BIOSMEM_CHAR_HEIGHT);
-	PhysPt dest=base+((CurMode->twidth*rnew)*(cheight/2)+cleft);
-	PhysPt src=base+((CurMode->twidth*rold)*(cheight/2)+cleft);
+	PhysPt dest=base+((real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*rnew)*(cheight/2)+cleft);
+	PhysPt src=base+((real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*rold)*(cheight/2)+cleft);
 	Bitu copy=(cright-cleft);
-	Bitu nextline=CurMode->twidth;
+	Bitu nextline=real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS);
 	for (Bitu i=0;i<cheight/2U;i++) {
 		MEM_BlockCopy(dest,src,copy);
 		MEM_BlockCopy(dest+8*1024,src+8*1024,copy);
@@ -41,9 +41,9 @@ static void CGA2_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt b
 
 static void CGA4_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt base) {
 	Bit8u cheight = real_readb(BIOSMEM_SEG,BIOSMEM_CHAR_HEIGHT);
-	PhysPt dest=base+((CurMode->twidth*rnew)*(cheight/2)+cleft)*2;
-	PhysPt src=base+((CurMode->twidth*rold)*(cheight/2)+cleft)*2;	
-	Bitu copy=(cright-cleft)*2;Bitu nextline=CurMode->twidth*2;
+	PhysPt dest=base+((real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*rnew)*(cheight/2)+cleft)*2;
+	PhysPt src=base+((real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*rold)*(cheight/2)+cleft)*2;	
+	Bitu copy=(cright-cleft)*2;Bitu nextline=real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*2;
 	for (Bitu i=0;i<cheight/2U;i++) {
 		MEM_BlockCopy(dest,src,copy);
 		MEM_BlockCopy(dest+8*1024,src+8*1024,copy);
@@ -53,9 +53,9 @@ static void CGA4_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt b
 
 static void TANDY16_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt base) {
 	Bit8u cheight = real_readb(BIOSMEM_SEG,BIOSMEM_CHAR_HEIGHT);
-	PhysPt dest=base+((CurMode->twidth*rnew)*(cheight/4)+cleft)*4;
-	PhysPt src=base+((CurMode->twidth*rold)*(cheight/4)+cleft)*4;	
-	Bitu copy=(cright-cleft)*4;Bitu nextline=CurMode->twidth*4;
+	PhysPt dest=base+((real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*rnew)*(cheight/4)+cleft)*4;
+	PhysPt src=base+((real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*rold)*(cheight/4)+cleft)*4;	
+	Bitu copy=(cright-cleft)*4;Bitu nextline=real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*4;
 	for (Bitu i=0;i<cheight/4U;i++) {
 		MEM_BlockCopy(dest,src,copy);
 		MEM_BlockCopy(dest+8*1024,src+8*1024,copy);
@@ -68,9 +68,9 @@ static void TANDY16_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysP
 static void EGA16_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt base) {
 	PhysPt src,dest;Bitu copy;
 	Bit8u cheight = real_readb(BIOSMEM_SEG,BIOSMEM_CHAR_HEIGHT);
-	dest=base+(CurMode->twidth*rnew)*cheight+cleft;
-	src=base+(CurMode->twidth*rold)*cheight+cleft;
-	Bitu nextline=CurMode->twidth;
+	dest=base+(real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*rnew)*cheight+cleft;
+	src=base+(real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*rold)*cheight+cleft;
+	Bitu nextline=real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS);
 	/* Setup registers correctly */
 	IO_Write(0x3ce,5);IO_Write(0x3cf,1);		/* Memory transfer mode */
 	IO_Write(0x3c4,2);IO_Write(0x3c5,0xf);		/* Enable all Write planes */
@@ -88,9 +88,9 @@ static void EGA16_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt
 static void VGA_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt base) {
 	PhysPt src,dest;Bitu copy;
 	Bit8u cheight = real_readb(BIOSMEM_SEG,BIOSMEM_CHAR_HEIGHT);
-	dest=base+8*((CurMode->twidth*rnew)*cheight+cleft);
-	src=base+8*((CurMode->twidth*rold)*cheight+cleft);
-	Bitu nextline=8*CurMode->twidth;
+	dest=base+8*((real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*rnew)*cheight+cleft);
+	src=base+8*((real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*rold)*cheight+cleft);
+	Bitu nextline=8*real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS);
 	Bitu rowsize=8*(cright-cleft);
 	copy=cheight;
 	for (;copy>0;copy--) {
@@ -101,16 +101,16 @@ static void VGA_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt ba
 
 static void TEXT_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt base) {
 	PhysPt src,dest;
-	src=base+(rold*CurMode->twidth+cleft)*2;
-	dest=base+(rnew*CurMode->twidth+cleft)*2;
+	src=base+(rold*real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)+cleft)*2;
+	dest=base+(rnew*real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)+cleft)*2;
 	MEM_BlockCopy(dest,src,(cright-cleft)*2);
 }
 
 static void CGA2_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u attr) {
 	Bit8u cheight = real_readb(BIOSMEM_SEG,BIOSMEM_CHAR_HEIGHT);
-	PhysPt dest=base+((CurMode->twidth*row)*(cheight/2)+cleft);
+	PhysPt dest=base+((real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*row)*(cheight/2)+cleft);
 	Bitu copy=(cright-cleft);
-	Bitu nextline=CurMode->twidth;
+	Bitu nextline=real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS);
 	attr=(attr & 0x3) | ((attr & 0x3) << 2) | ((attr & 0x3) << 4) | ((attr & 0x3) << 6);
 	for (Bitu i=0;i<cheight/2U;i++) {
 		for (Bitu x=0;x<copy;x++) {
@@ -123,8 +123,8 @@ static void CGA2_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u at
 
 static void CGA4_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u attr) {
 	Bit8u cheight = real_readb(BIOSMEM_SEG,BIOSMEM_CHAR_HEIGHT);
-	PhysPt dest=base+((CurMode->twidth*row)*(cheight/2)+cleft)*2;
-	Bitu copy=(cright-cleft)*2;Bitu nextline=CurMode->twidth*2;
+	PhysPt dest=base+((real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*row)*(cheight/2)+cleft)*2;
+	Bitu copy=(cright-cleft)*2;Bitu nextline=real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*2;
 	attr=(attr & 0x3) | ((attr & 0x3) << 2) | ((attr & 0x3) << 4) | ((attr & 0x3) << 6);
 	for (Bitu i=0;i<cheight/2U;i++) {
 		for (Bitu x=0;x<copy;x++) {
@@ -137,8 +137,8 @@ static void CGA4_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u at
 
 static void TANDY16_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u attr) {
 	Bit8u cheight = real_readb(BIOSMEM_SEG,BIOSMEM_CHAR_HEIGHT);
-	PhysPt dest=base+((CurMode->twidth*row)*(cheight/4)+cleft)*4;
-	Bitu copy=(cright-cleft)*4;Bitu nextline=CurMode->twidth*4;
+	PhysPt dest=base+((real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*row)*(cheight/4)+cleft)*4;
+	Bitu copy=(cright-cleft)*4;Bitu nextline=real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*4;
 	attr=(attr & 0xf) | (attr & 0xf) << 4;
 	for (Bitu i=0;i<cheight/4U;i++) {
 		for (Bitu x=0;x<copy;x++) {
@@ -158,8 +158,8 @@ static void EGA16_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u a
 	IO_Write(0x3ce,0x1);IO_Write(0x3cf,0xf);
 	/* Write some bytes */
 	Bit8u cheight = real_readb(BIOSMEM_SEG,BIOSMEM_CHAR_HEIGHT);
-	PhysPt dest=base+(CurMode->twidth*row)*cheight+cleft;	
-	Bitu nextline=CurMode->twidth;
+	PhysPt dest=base+(real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*row)*cheight+cleft;	
+	Bitu nextline=real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS);
 	Bitu copy = cheight;Bitu rowsize=(cright-cleft);
 	for (;copy>0;copy--) {
 		for (Bitu x=0;x<rowsize;x++) mem_writeb(dest+x,0xff);
@@ -171,8 +171,8 @@ static void EGA16_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u a
 static void VGA_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u attr) {
 	/* Write some bytes */
 	Bit8u cheight = real_readb(BIOSMEM_SEG,BIOSMEM_CHAR_HEIGHT);
-	PhysPt dest=base+8*((CurMode->twidth*row)*cheight+cleft);
-	Bitu nextline=8*CurMode->twidth;
+	PhysPt dest=base+8*((real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)*row)*cheight+cleft);
+	Bitu nextline=8*real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS);
 	Bitu copy = cheight;Bitu rowsize=8*(cright-cleft);
 	for (;copy>0;copy--) {
 		for (Bitu x=0;x<rowsize;x++) mem_writeb(dest+x,attr);
@@ -183,7 +183,7 @@ static void VGA_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u att
 static void TEXT_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u attr) {
 	/* Do some filing */
 	PhysPt dest;
-	dest=base+(row*CurMode->twidth+cleft)*2;
+	dest=base+(row*real_readb(BIOSMEM_SEG,BIOSMEM_NB_COLS)+cleft)*2;
 	Bit16u fill=(attr<<8)+' ';
 	for (Bit8u x=0;x<(cright-cleft);x++) {
 		mem_writew(dest,fill);
-- 
2.15.1

